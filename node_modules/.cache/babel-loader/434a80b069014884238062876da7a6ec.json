{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\maria\\\\REACT\\\\ohMyCode_toDoTest\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"C:\\\\Users\\\\maria\\\\REACT\\\\ohMyCode_toDoTest\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\maria\\\\REACT\\\\ohMyCode_toDoTest\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\maria\\\\REACT\\\\ohMyCode_toDoTest\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar apiUrl = \"https://jsonplaceholder.typicode.com\";\nexport function get(path) {\n  return fetch(apiUrl + path, {\n    timeout: 6000,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      'Authorization': 'Bearer' + localStorage.getItem('token') //haciendo esto no tengo que enviar token en cada una de las peticiones sino que lo almaceno en la localStorage en la instancia de mi api//\n\n    }\n  }).then(function (result) {\n    return result.json();\n  });\n}\n;\nexport var getAll = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"\".concat(apiUrl, \"/todos\"));\n\n          case 2:\n            response = _context.sent;\n\n            if (response.ok) {\n              _context.next = 5;\n              break;\n            }\n\n            throw new Error('something was wrong');\n\n          case 5:\n            return _context.abrupt(\"return\", response.json());\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getAll() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var updateItem = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref2) {\n    var id, data, response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            id = _ref2.id, data = _objectWithoutProperties(_ref2, [\"id\"]);\n            _context2.next = 3;\n            return fetch(\"\".concat(apiUrl, \"/todos/\").concat(id), {\n              method: 'PUT',\n              headers: {\n                'Content-type': 'application/json'\n              },\n              body: JSON.stringify(data)\n            });\n\n          case 3:\n            response = _context2.sent;\n\n            if (response.ok) {\n              _context2.next = 6;\n              break;\n            }\n\n            throw new Error(response.json().message);\n\n          case 6:\n            return _context2.abrupt(\"return\", response.json());\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function updateItem(_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var getItem = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref4) {\n    var queryKey, _queryKey, key, id, response;\n\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            queryKey = _ref4.queryKey;\n            _queryKey = _slicedToArray(queryKey, 2), key = _queryKey[0], id = _queryKey[1].id;\n            _context3.next = 4;\n            return fetch(\"\".concat(apiUrl, \"/todos/\").concat(id));\n\n          case 4:\n            response = _context3.sent;\n\n            if (response.ok) {\n              _context3.next = 7;\n              break;\n            }\n\n            throw new Error(response.json().message);\n\n          case 7:\n            return _context3.abrupt(\"return\", response.json());\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function getItem(_x2) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var getUserId = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(_ref6) {\n    var queryKey, _queryKey2, key, userId, response;\n\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            queryKey = _ref6.queryKey;\n            _queryKey2 = _slicedToArray(queryKey, 2), key = _queryKey2[0], userId = _queryKey2[1].userId;\n            _context4.next = 4;\n            return fetch(\"\".concat(apiUrl, \"/todos/\").concat(userId));\n\n          case 4:\n            response = _context4.sent;\n\n            if (response.ok) {\n              _context4.next = 7;\n              break;\n            }\n\n            throw new Error(response.json().message);\n\n          case 7:\n            return _context4.abrupt(\"return\", response.json());\n\n          case 8:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function getUserId(_x3) {\n    return _ref7.apply(this, arguments);\n  };\n}();\nexport var removeItem = /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(id) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return fetch(\"\".concat(apiUrl, \"/todos/\").concat(id), {\n              method: 'DELETE'\n            });\n\n          case 2:\n            response = _context5.sent;\n\n            if (response.ok) {\n              _context5.next = 5;\n              break;\n            }\n\n            throw new Error(response.json().message);\n\n          case 5:\n            return _context5.abrupt(\"return\", true);\n\n          case 6:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function removeItem(_x4) {\n    return _ref8.apply(this, arguments);\n  };\n}();\nexport var createItem = /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(data) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return fetch(\"\".concat(apiUrl, \"/todos/\"), {\n              method: 'POST',\n              headers: {\n                'Content-type': 'application/json; charset=UTF-8'\n              },\n              body: JSON.stringify(data)\n            });\n\n          case 2:\n            response = _context6.sent;\n\n            if (response.ok) {\n              _context6.next = 5;\n              break;\n            }\n\n            throw new Error(response.json().message);\n\n          case 5:\n            return _context6.abrupt(\"return\", response.json());\n\n          case 6:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function createItem(_x5) {\n    return _ref9.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["C:/Users/maria/REACT/ohMyCode_toDoTest/my-app/src/services/api.js"],"names":["apiUrl","get","path","fetch","timeout","headers","Accept","localStorage","getItem","then","result","json","getAll","response","ok","Error","updateItem","id","data","method","body","JSON","stringify","message","queryKey","key","getUserId","userId","removeItem","createItem"],"mappings":";;;;AACA,IAAMA,MAAM,GAAG,sCAAf;AAGA,OAAO,SAASC,GAAT,CAAaC,IAAb,EAAkB;AACrB,SAAOC,KAAK,CAACH,MAAM,GAAGE,IAAV,EAAgB;AACxBE,IAAAA,OAAO,EAAC,IADgB;AAExBC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAe,kBAFV;AAGL,qCAA8B,GAHzB;AAIL,uBAAgB,WAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAJtB,CAKL;;AALK;AAFe,GAAhB,CAAL,CASJC,IATI,CASC,UAACC,MAAD;AAAA,WAAWA,MAAM,CAACC,IAAP,EAAX;AAAA,GATD,CAAP;AAUH;AAAA;AAED,OAAO,IAAMC,MAAM;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACKT,KAAK,WAAIH,MAAJ,YADV;;AAAA;AACZa,YAAAA,QADY;;AAAA,gBAEbA,QAAQ,CAACC,EAFI;AAAA;AAAA;AAAA;;AAAA,kBAGR,IAAIC,KAAJ,CAAU,qBAAV,CAHQ;;AAAA;AAAA,6CAKXF,QAAQ,CAACF,IAAT,EALW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAANC,MAAM;AAAA;AAAA;AAAA,GAAZ;AAOP,OAAO,IAAMI,UAAU;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,EAAT,SAASA,EAAT,EAAgBC,IAAhB;AAAA;AAAA,mBACCf,KAAK,WAAIH,MAAJ,oBAAoBiB,EAApB,GAA0B;AAClDE,cAAAA,MAAM,EAAE,KAD0C;AAElDd,cAAAA,OAAO,EAAE;AACL,gCAAgB;AADX,eAFyC;AAKlDe,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf;AAL4C,aAA1B,CADN;;AAAA;AAChBL,YAAAA,QADgB;;AAAA,gBASjBA,QAAQ,CAACC,EATQ;AAAA;AAAA;AAAA;;AAAA,kBAUZ,IAAIC,KAAJ,CAAUF,QAAQ,CAACF,IAAT,GAAgBY,OAA1B,CAVY;;AAAA;AAAA,8CAYfV,QAAQ,CAACF,IAAT,EAZe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVK,UAAU;AAAA;AAAA;AAAA,GAAhB;AAcP,OAAO,IAAMR,OAAO;AAAA,uEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAASgB,YAAAA,QAAT,SAASA,QAAT;AAAA,uCACGA,QADH,MACZC,GADY,iBACLR,EADK,gBACLA,EADK;AAAA;AAAA,mBAEId,KAAK,WAAIH,MAAJ,oBAAoBiB,EAApB,EAFT;;AAAA;AAEbJ,YAAAA,QAFa;;AAAA,gBAGdA,QAAQ,CAACC,EAHK;AAAA;AAAA;AAAA;;AAAA,kBAIT,IAAIC,KAAJ,CAAUF,QAAQ,CAACF,IAAT,GAAgBY,OAA1B,CAJS;;AAAA;AAAA,8CAMZV,QAAQ,CAACF,IAAT,EANY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAPH,OAAO;AAAA;AAAA;AAAA,GAAb;AASP,OAAO,IAAMkB,SAAS;AAAA,uEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAASF,YAAAA,QAAT,SAASA,QAAT;AAAA,wCACKA,QADL,MACdC,GADc,kBACPE,MADO,iBACPA,MADO;AAAA;AAAA,mBAEExB,KAAK,WAAIH,MAAJ,oBAAoB2B,MAApB,EAFP;;AAAA;AAEfd,YAAAA,QAFe;;AAAA,gBAGhBA,QAAQ,CAACC,EAHO;AAAA;AAAA;AAAA;;AAAA,kBAIX,IAAIC,KAAJ,CAAUF,QAAQ,CAACF,IAAT,GAAgBY,OAA1B,CAJW;;AAAA;AAAA,8CAMdV,QAAQ,CAACF,IAAT,EANc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATe,SAAS;AAAA;AAAA;AAAA,GAAf;AAUP,OAAO,IAAME,UAAU;AAAA,uEAAG,kBAAOX,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACCd,KAAK,WAAIH,MAAJ,oBAAoBiB,EAApB,GAA0B;AAClDE,cAAAA,MAAM,EAAE;AAD0C,aAA1B,CADN;;AAAA;AAChBN,YAAAA,QADgB;;AAAA,gBAIjBA,QAAQ,CAACC,EAJQ;AAAA;AAAA;AAAA;;AAAA,kBAKZ,IAAIC,KAAJ,CAAUF,QAAQ,CAACF,IAAT,GAAgBY,OAA1B,CALY;;AAAA;AAAA,8CAOf,IAPe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVK,UAAU;AAAA;AAAA;AAAA,GAAhB;AAUP,OAAO,IAAMC,UAAU;AAAA,uEAAG,kBAAOX,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACCf,KAAK,WAAIH,MAAJ,cAAqB;AAC7CmB,cAAAA,MAAM,EAAE,MADqC;AAE7Cd,cAAAA,OAAO,EAAE;AACL,gCAAgB;AADX,eAFoC;AAK7Ce,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf;AALuC,aAArB,CADN;;AAAA;AAChBL,YAAAA,QADgB;;AAAA,gBAQjBA,QAAQ,CAACC,EARQ;AAAA;AAAA;AAAA;;AAAA,kBASZ,IAAIC,KAAJ,CAAUF,QAAQ,CAACF,IAAT,GAAgBY,OAA1B,CATY;;AAAA;AAAA,8CAWfV,QAAQ,CAACF,IAAT,EAXe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVkB,UAAU;AAAA;AAAA;AAAA,GAAhB","sourcesContent":["\r\nconst apiUrl = \"https://jsonplaceholder.typicode.com\";\r\n\r\n\r\nexport function get(path){\r\n    return fetch(apiUrl + path, {\r\n        timeout:6000,\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type':'application/json',\r\n            'Access-Control-Allow-Origin':'*',\r\n            'Authorization':'Bearer' + localStorage.getItem('token')\r\n            //haciendo esto no tengo que enviar token en cada una de las peticiones sino que lo almaceno en la localStorage en la instancia de mi api//\r\n        }\r\n    }).then((result)=> result.json());\r\n};\r\n\r\nexport const getAll = async () => {\r\n    const response = await fetch(`${apiUrl}/todos`);\r\n    if (!response.ok) {\r\n        throw new Error('something was wrong')\r\n    }\r\n    return response.json();\r\n}\r\nexport const updateItem = async ({ id, ...data }) => {\r\n    const response = await fetch(`${apiUrl}/todos/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data)\r\n    })\r\n   \r\n    if (!response.ok) {\r\n        throw new Error(response.json().message)\r\n    }\r\n    return response.json()\r\n}\r\nexport const getItem = async ({ queryKey }) => {\r\n    const [key, { id }] = queryKey;\r\n    const response = await fetch(`${apiUrl}/todos/${id}`)\r\n    if (!response.ok) {\r\n        throw new Error(response.json().message)\r\n    }\r\n    return response.json()\r\n\r\n}\r\nexport const getUserId = async ({ queryKey }) => {\r\n    const [key, { userId }] = queryKey;\r\n    const response = await fetch(`${apiUrl}/todos/${userId}`)\r\n    if (!response.ok) {\r\n        throw new Error(response.json().message)\r\n    }\r\n    return response.json()\r\n\r\n}\r\n\r\nexport const removeItem = async (id) => {\r\n    const response = await fetch(`${apiUrl}/todos/${id}`, {\r\n        method: 'DELETE'\r\n    })\r\n    if (!response.ok) {\r\n        throw new Error(response.json().message)\r\n    }\r\n    return true\r\n\r\n}\r\nexport const createItem = async (data) => {\r\n    const response = await fetch(`${apiUrl}/todos/`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-type': 'application/json; charset=UTF-8',\r\n        },\r\n        body: JSON.stringify(data)\r\n    });\r\n    if (!response.ok) {\r\n        throw new Error(response.json().message)\r\n    }\r\n    return response.json();\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}