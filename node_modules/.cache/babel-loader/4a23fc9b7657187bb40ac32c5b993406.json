{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\maria\\\\REACT\\\\ohMyCode_toDoTest\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _objectSpread from \"C:\\\\Users\\\\maria\\\\REACT\\\\ohMyCode_toDoTest\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\maria\\\\REACT\\\\ohMyCode_toDoTest\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\maria\\\\REACT\\\\ohMyCode_toDoTest\\\\my-app\\\\src\\\\pages\\\\UpdateItem.jsx\";\n\nimport React from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useQuery, useMutation } from 'react-query';\nimport { getItem, updateItem } from '../services/api';\nimport ItemForm from '../components/ItemForm';\n\nvar UpdateItem = function UpdateItem() {\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  var history = useHistory();\n\n  var _useQuery = useQuery(['item', {\n    id: id\n  }], getItem),\n      data = _useQuery.data,\n      status = _useQuery.status,\n      error = _useQuery.error;\n\n  var _useMutation = useMutation(updateItem),\n      mutateAsync = _useMutation.mutateAsync;\n\n  var onFormSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return mutateAsync(_objectSpread({}, data, {\n                id: id\n              }));\n\n            case 2:\n              history.push('/');\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onFormSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  if (status === \"loading\") {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 12\n      }\n    }, \"Cargando...\");\n  }\n\n  if (error === \"error\") {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 12\n      }\n    }, \"Error\");\n  }\n\n  if (status === \"success\") {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Flex, {\n      flexDirection: \"column\",\n      alignItems: \"start\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, \"Update Task\"), /*#__PURE__*/React.createElement(ItemForm, {\n      defaultValues: data,\n      onFormSubmit: onFormSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    })));\n  }\n};\n\nexport default UpdateItem;","map":{"version":3,"sources":["C:/Users/maria/REACT/ohMyCode_toDoTest/my-app/src/pages/UpdateItem.jsx"],"names":["React","useHistory","useParams","useQuery","useMutation","getItem","updateItem","ItemForm","UpdateItem","id","history","data","status","error","mutateAsync","onFormSubmit","push"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,aAAtC;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,iBAApC;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA,mBACRN,SAAS,EADD;AAAA,MACfO,EADe,cACfA,EADe;;AAEvB,MAAMC,OAAO,GAAGT,UAAU,EAA1B;;AAFuB,kBAGUE,QAAQ,CAAC,CAAC,MAAD,EAAS;AAAEM,IAAAA,EAAE,EAAFA;AAAF,GAAT,CAAD,EAAmBJ,OAAnB,CAHlB;AAAA,MAGfM,IAHe,aAGfA,IAHe;AAAA,MAGTC,MAHS,aAGTA,MAHS;AAAA,MAGDC,KAHC,aAGDA,KAHC;;AAAA,qBAIDT,WAAW,CAACE,UAAD,CAJV;AAAA,MAIhBQ,WAJgB,gBAIhBA,WAJgB;;AAKvB,MAAMC,YAAY;AAAA,wEAAG,iBAAOJ,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACXG,WAAW,mBAAKH,IAAL;AAAWF,gBAAAA,EAAE,EAAFA;AAAX,iBADA;;AAAA;AAEjBC,cAAAA,OAAO,CAACM,IAAR,CAAa,GAAb;;AAFiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZD,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAMA,MAAIH,MAAM,KAAK,SAAf,EAA0B;AACxB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACD;;AACD,MAAIC,KAAK,KAAK,OAAd,EAAuB;AACrB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACD;;AACD,MAAID,MAAM,KAAK,SAAf,EAA0B;AAExB,wBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,aAAa,EAAC,QAApB;AAA6B,MAAA,UAAU,EAAC,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE,oBAAC,QAAD;AAAU,MAAA,aAAa,EAAED,IAAzB;AAA+B,MAAA,YAAY,EAAEI,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADF;AAQD;AACF,CA5BD;;AA8BA,eAAeP,UAAf","sourcesContent":["import React from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { useQuery, useMutation } from 'react-query'\r\nimport { getItem, updateItem } from '../services/api'\r\nimport ItemForm from '../components/ItemForm'\r\n\r\nconst UpdateItem = () => {\r\n  const { id } = useParams()\r\n  const history = useHistory()\r\n  const { data, status, error, } = useQuery(['item', { id }], getItem);\r\n  const {mutateAsync} = useMutation(updateItem);\r\n  const onFormSubmit = async (data) => {\r\n      await mutateAsync({...data, id});\r\n      history.push('/');\r\n  }\r\n\r\n\r\n  if (status === \"loading\") {\r\n    return <p>Cargando...</p>;\r\n  }\r\n  if (error === \"error\") {\r\n    return <p>Error</p>;\r\n  }\r\n  if (status === \"success\") {\r\n\r\n    return (\r\n      <Container>\r\n        <Flex flexDirection=\"column\" alignItems=\"start\">\r\n          <h3>Update Task</h3>\r\n          <ItemForm defaultValues={data} onFormSubmit={onFormSubmit}/>\r\n        </Flex>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UpdateItem"]},"metadata":{},"sourceType":"module"}