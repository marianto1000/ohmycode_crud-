{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\maria\\\\REACT\\\\ohMyCode_toDoTest\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\maria\\\\REACT\\\\ohMyCode_toDoTest\\\\my-app\\\\src\\\\pages\\\\ToDoList.jsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from \"react-router\";\nimport { useQuery } from 'react-query';\nimport { Flex } from \"rebass/styled-components\";\nimport './ToDoList.css';\nimport { getAll, get } from '../services/api';\nimport Item from './Item';\nimport SearchBar from '../components/SearchBar';\n\nvar ToDoList = function ToDoList() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  function useQueryParams() {\n    return new URLSearchParams(useLocation().search);\n  }\n\n  var query = useQueryParams();\n  var search = query.get('search');\n  console.log(search);\n  useEffect(function () {\n    setIsLoading(true);\n    var searchUrl = search ? '/search/todos?query=' + search : '/todos';\n    get(searchUrl).then(function (data) {\n      setData(data);\n      setIsLoading(false);\n    });\n  }, [search]); // const { data, status, error, } = useQuery(\"todos\", getAll);\n  // console.log(data)\n  // if (status === \"loading\") {\n  //     return <p>Cargando...</p>;\n  // }\n  // if (error === \"error\") {\n  //     return <p>Error</p>;\n  // }\n  // if (status === \"success\") {\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 20\n      }\n    }, \"Cargando..\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SearchBar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Flex, {\n    flexDirection: \"column\",\n    alignItems: \"start\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, data.map(function (_ref) {\n    var userId = _ref.userId,\n        title = _ref.title,\n        id = _ref.id,\n        completed = _ref.completed;\n    return /*#__PURE__*/React.createElement(Item, {\n      title: title,\n      userId: userId,\n      completed: completed,\n      key: id,\n      id: id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    });\n  }))); //}\n};\n\nexport default ToDoList;","map":{"version":3,"sources":["C:/Users/maria/REACT/ohMyCode_toDoTest/my-app/src/pages/ToDoList.jsx"],"names":["React","useState","useEffect","useLocation","useQuery","Flex","getAll","get","Item","SearchBar","ToDoList","data","setData","isLoading","setIsLoading","useQueryParams","URLSearchParams","search","query","console","log","searchUrl","then","map","userId","title","id","completed"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,IAAT,QAAqB,0BAArB;AACA,OAAO,gBAAP;AACA,SAASC,MAAT,EAAiBC,GAAjB,QAA4B,iBAA5B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA,kBACKT,QAAQ,CAAC,EAAD,CADb;AAAA;AAAA,MACZU,IADY;AAAA,MACNC,OADM;;AAAA,mBAEeX,QAAQ,CAAC,IAAD,CAFvB;AAAA;AAAA,MAEZY,SAFY;AAAA,MAEDC,YAFC;;AAGnB,WAASC,cAAT,GAA0B;AACtB,WAAO,IAAIC,eAAJ,CAAoBb,WAAW,GAAGc,MAAlC,CAAP;AACH;;AACD,MAAMC,KAAK,GAAGH,cAAc,EAA5B;AACA,MAAME,MAAM,GAAGC,KAAK,CAACX,GAAN,CAAU,QAAV,CAAf;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AAEAf,EAAAA,SAAS,CAAC,YAAM;AACZY,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,QAAMO,SAAS,GAAGJ,MAAM,GAAG,yBAAyBA,MAA5B,GAAqC,QAA7D;AACAV,IAAAA,GAAG,CAACc,SAAD,CAAH,CAAeC,IAAf,CAAoB,UAACX,IAAD,EAAU;AAC1BC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACFG,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAHD;AAID,GAPM,EAOJ,CAACG,MAAD,CAPI,CAAT,CAVmB,CAsBnB;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI,MAAIJ,SAAJ,EAAe;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AAEH,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,IAAD;AAAM,IAAA,aAAa,EAAC,QAApB;AAA6B,IAAA,UAAU,EAAC,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,IAAI,CAACY,GAAL,CAAS;AAAA,QAAGC,MAAH,QAAGA,MAAH;AAAA,QAAWC,KAAX,QAAWA,KAAX;AAAA,QAAkBC,EAAlB,QAAkBA,EAAlB;AAAA,QAAsBC,SAAtB,QAAsBA,SAAtB;AAAA,wBACN,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEF,KAAb;AAAoB,MAAA,MAAM,EAAED,MAA5B;AAAoC,MAAA,SAAS,EAAEG,SAA/C;AAA0D,MAAA,GAAG,EAAED,EAA/D;AAAmE,MAAA,EAAE,EAAEA,EAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADM;AAAA,GAAT,CADL,CAFJ,CADJ,CAvCe,CAiDnB;AACH,CAlDD;;AAoDA,eAAehB,QAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { useLocation } from \"react-router\";\r\nimport { useQuery } from 'react-query';\r\nimport { Flex } from \"rebass/styled-components\";\r\nimport './ToDoList.css'\r\nimport { getAll, get } from '../services/api'\r\nimport Item from './Item';\r\nimport SearchBar from '../components/SearchBar';\r\n\r\n\r\nconst ToDoList = () => {\r\n    const [data, setData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    function useQueryParams() {\r\n        return new URLSearchParams(useLocation().search);\r\n    }\r\n    const query = useQueryParams();\r\n    const search = query.get('search');\r\n    console.log(search)\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        const searchUrl = search ? '/search/todos?query=' + search : '/todos'\r\n        get(searchUrl).then((data) => {\r\n            setData(data);\r\n          setIsLoading(false);\r\n        });\r\n      }, [search]);\r\n\r\n \r\n\r\n\r\n    // const { data, status, error, } = useQuery(\"todos\", getAll);\r\n    // console.log(data)\r\n\r\n    \r\n \r\n\r\n    // if (status === \"loading\") {\r\n    //     return <p>Cargando...</p>;\r\n    // }\r\n    // if (error === \"error\") {\r\n    //     return <p>Error</p>;\r\n    // }\r\n    // if (status === \"success\") {\r\n        if (isLoading) {\r\n            return <p>Cargando..</p>;\r\n          }\r\n\r\n        return (\r\n            <div>\r\n                <SearchBar/>\r\n                <Flex flexDirection=\"column\" alignItems=\"start\">\r\n                    {data.map(({ userId, title, id, completed }) => (\r\n                        <Item title={title} userId={userId} completed={completed} key={id} id={id} />\r\n                    ))}\r\n                </Flex>\r\n            </div>\r\n        )\r\n    //}\r\n}\r\n\r\nexport default ToDoList"]},"metadata":{},"sourceType":"module"}