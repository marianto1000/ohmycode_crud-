{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\maria\\\\REACT\\\\ohMyCode_toDoTest\\\\my-app\\\\src\\\\components\\\\ItemForm.jsx\";\n\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\n\nvar ItemForm = function ItemForm(_ref) {\n  var defaultValues = _ref.defaultValues,\n      onFormSubmit = _ref.onFormSubmit;\n\n  var _useForm = useForm({\n    defaultValues: defaultValues\n  }),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors;\n\n  var onSubmit = handleSubmit(function (data) {\n    onFormSubmit(data);\n    console.log(data);\n  });\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: register({\n      required: true,\n      maxLength: 200\n    }),\n    id: \"title\",\n    name: \"title\",\n    type: \"text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }), errors.exampleRequired && /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 40\n    }\n  }, \"This field is required\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"userId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, \"User Identification\"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: register({\n      required: true,\n      min: 1\n    }),\n    id: \"userId\",\n    name: \"userId\",\n    type: \"number\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }), errors.exampleRequired && /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 40\n    }\n  }, \"This field is required\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"completed\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, \"Status\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"completed\",\n    ref: register({\n      required: true\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"true\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, \"completed\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"false\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, \"not completed\")), /*#__PURE__*/React.createElement(\"button\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, \"Submit\"));\n};\n\nexport default ItemForm;","map":{"version":3,"sources":["C:/Users/maria/REACT/ohMyCode_toDoTest/my-app/src/components/ItemForm.jsx"],"names":["React","useForm","ItemForm","defaultValues","onFormSubmit","register","handleSubmit","errors","onSubmit","data","console","log","required","maxLength","exampleRequired","min"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAqC;AAAA,MAAlCC,aAAkC,QAAlCA,aAAkC;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;;AAAA,iBAEPH,OAAO,CAAC;AAAEE,IAAAA,aAAa,EAAbA;AAAF,GAAD,CAFA;AAAA,MAE1CE,QAF0C,YAE1CA,QAF0C;AAAA,MAEhCC,YAFgC,YAEhCA,YAFgC;AAAA,MAElBC,MAFkB,YAElBA,MAFkB;;AAGlD,MAAMC,QAAQ,GAAGF,YAAY,CAAC,UAACG,IAAD,EAAU;AACpCL,IAAAA,YAAY,CAACK,IAAD,CAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,GAH4B,CAA7B;AAIA,sBACI;AAAM,IAAA,QAAQ,EAAED,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAO,IAAA,GAAG,EAAEH,QAAQ,CAAC;AAAEO,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,SAAS,EAAE;AAA7B,KAAD,CAApB;AAAyD,IAAA,EAAE,EAAC,OAA5D;AAAoE,IAAA,IAAI,EAAC,OAAzE;AAAiF,IAAA,IAAI,EAAC,MAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKN,MAAM,CAACO,eAAP,iBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAH/B,eAII;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJJ,eAKI;AAAO,IAAA,GAAG,EAAET,QAAQ,CAAC;AAAEO,MAAAA,QAAQ,EAAE,IAAZ;AAAmBG,MAAAA,GAAG,EAAE;AAAxB,KAAD,CAApB;AAAmD,IAAA,EAAE,EAAC,QAAtD;AAA+D,IAAA,IAAI,EAAC,QAApE;AAA6E,IAAA,IAAI,EAAC,QAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAMKR,MAAM,CAACO,eAAP,iBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAN/B,eAOI;AAAO,IAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAQ,IAAA,IAAI,EAAC,WAAb;AAAyB,IAAA,GAAG,EAAET,QAAQ,CAAC;AAAEO,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,CARJ,eAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ,CADJ;AAkBH,CAzBD;;AA2BA,eAAeV,QAAf","sourcesContent":["import React from 'react'\r\nimport { useForm } from 'react-hook-form'\r\n\r\nconst ItemForm = ({ defaultValues, onFormSubmit }) => {\r\n\r\n    const { register, handleSubmit, errors } = useForm({ defaultValues })\r\n    const onSubmit = handleSubmit((data) => {\r\n        onFormSubmit(data)\r\n        console.log(data)\r\n    })\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <label htmlFor='title'>Title</label>\r\n            <input ref={register({ required: true, maxLength: 200})} id=\"title\" name=\"title\" type=\"text\" />\r\n            {errors.exampleRequired && <span>This field is required</span>}\r\n            <label htmlFor='userId'>User Identification</label>\r\n            <input ref={register({ required: true,  min: 1 })} id=\"userId\" name=\"userId\" type=\"number\" />\r\n            {errors.exampleRequired && <span>This field is required</span>}\r\n            <label htmlFor='completed'>Status</label>\r\n            <select name=\"completed\" ref={register({ required: true })} >\r\n                <option value=\"true\">completed</option>\r\n                <option value=\"false\">not completed</option>\r\n            </select>\r\n            <button>\r\n                Submit\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ItemForm"]},"metadata":{},"sourceType":"module"}