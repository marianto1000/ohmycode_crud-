{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\maria\\\\REACT\\\\ohMyCode_toDoTest\\\\my-app\\\\src\\\\pages\\\\ToDoList.jsx\";\n\nimport React, { useState } from 'react';\nimport { useQuery } from 'react-query';\nimport { Flex } from \"rebass/styled-components\";\nimport './ToDoList.css';\nimport { getAll, getUserId } from '../services/api';\nimport { useForm } from 'react-hook-form';\nimport Item from './Item';\n\nvar ToDoList = function ToDoList() {\n  var _useQuery = useQuery(\"todos\", getAll),\n      data = _useQuery.data,\n      status = _useQuery.status,\n      error = _useQuery.error;\n\n  console.log(data);\n\n  if (status === \"loading\") {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 16\n      }\n    }, \"Cargando...\");\n  }\n\n  if (error === \"error\") {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 16\n      }\n    }, \"Error\");\n  }\n\n  if (status === \"success\") {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: onSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"userId\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, \"User Identification\"), /*#__PURE__*/React.createElement(\"input\", {\n      ref: register({\n        required: true,\n        min: 1\n      }),\n      id: \"userId\",\n      name: \"userId\",\n      type: \"text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, \"Submit\")), /*#__PURE__*/React.createElement(Flex, {\n      flexDirection: \"column\",\n      alignItems: \"start\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, data.map(function (_ref) {\n      var userId = _ref.userId,\n          title = _ref.title,\n          id = _ref.id,\n          completed = _ref.completed;\n      return /*#__PURE__*/React.createElement(Item, {\n        title: title,\n        userId: userId,\n        completed: completed,\n        key: id,\n        id: id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }\n      });\n    })));\n  }\n};\n\nexport default ToDoList;","map":{"version":3,"sources":["C:/Users/maria/REACT/ohMyCode_toDoTest/my-app/src/pages/ToDoList.jsx"],"names":["React","useState","useQuery","Flex","getAll","getUserId","useForm","Item","ToDoList","data","status","error","console","log","onSubmit","register","required","min","map","userId","title","id","completed"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,IAAT,QAAqB,0BAArB;AACA,OAAO,gBAAP;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,iBAAlC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA,kBAEcN,QAAQ,CAAC,OAAD,EAAUE,MAAV,CAFtB;AAAA,MAEXK,IAFW,aAEXA,IAFW;AAAA,MAELC,MAFK,aAELA,MAFK;AAAA,MAEGC,KAFH,aAEGA,KAFH;;AAGnBC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;;AAEA,MAAIC,MAAM,KAAK,SAAf,EAA0B;AACtB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACH;;AACD,MAAIC,KAAK,KAAK,OAAd,EAAuB;AACnB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACH;;AACD,MAAID,MAAM,KAAK,SAAf,EAA0B;AAEtB,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AAAM,MAAA,QAAQ,EAAEI,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAO,MAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADD,eAEC;AAAO,MAAA,GAAG,EAAEC,QAAQ,CAAC;AAAEC,QAAAA,QAAQ,EAAE,IAAZ;AAAkBC,QAAAA,GAAG,EAAE;AAAvB,OAAD,CAApB;AAAkD,MAAA,EAAE,EAAC,QAArD;AAA8D,MAAA,IAAI,EAAC,QAAnE;AAA4E,MAAA,IAAI,EAAC,MAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHD,CADH,eAQI,oBAAC,IAAD;AAAM,MAAA,aAAa,EAAC,QAApB;AAA6B,MAAA,UAAU,EAAC,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKR,IAAI,CAACS,GAAL,CAAS;AAAA,UAAGC,MAAH,QAAGA,MAAH;AAAA,UAAWC,KAAX,QAAWA,KAAX;AAAA,UAAkBC,EAAlB,QAAkBA,EAAlB;AAAA,UAAsBC,SAAtB,QAAsBA,SAAtB;AAAA,0BACN,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,KAAb;AAAoB,QAAA,MAAM,EAAED,MAA5B;AAAoC,QAAA,SAAS,EAAEG,SAA/C;AAA0D,QAAA,GAAG,EAAED,EAA/D;AAAmE,QAAA,EAAE,EAAEA,EAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADM;AAAA,KAAT,CADL,CARJ,CADJ;AAgBH;AACJ,CA9BD;;AAgCA,eAAeb,QAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { useQuery } from 'react-query';\r\nimport { Flex } from \"rebass/styled-components\";\r\nimport './ToDoList.css'\r\nimport { getAll, getUserId } from '../services/api'\r\nimport { useForm } from 'react-hook-form'\r\nimport Item from './Item';\r\n\r\nconst ToDoList = () => {\r\n\r\n    const { data, status, error, } = useQuery(\"todos\", getAll);\r\n    console.log(data)\r\n\r\n    if (status === \"loading\") {\r\n        return <p>Cargando...</p>;\r\n    }\r\n    if (error === \"error\") {\r\n        return <p>Error</p>;\r\n    }\r\n    if (status === \"success\") {\r\n\r\n        return (\r\n            <div>\r\n               <form onSubmit={onSubmit}>\r\n                <label htmlFor='userId'>User Identification</label>\r\n                <input ref={register({ required: true, min: 1 })} id=\"userId\" name=\"userId\" type=\"text\" />\r\n                <button>\r\n                    Submit\r\n                </button>\r\n            </form>\r\n                <Flex flexDirection=\"column\" alignItems=\"start\">\r\n                    {data.map(({ userId, title, id, completed }) => (\r\n                        <Item title={title} userId={userId} completed={completed} key={id} id={id} />\r\n                    ))}\r\n                </Flex>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToDoList"]},"metadata":{},"sourceType":"module"}